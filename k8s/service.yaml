apiVersion: v1
kind: Service
metadata:
  name: dockugen-service
  namespace: dockugen
  labels:
    app: dockugen
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: api
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: metrics
  selector:
    app: dockugen
---
apiVersion: v1
kind: Service
metadata:
  name: dockugen-nginx-service
  namespace: dockugen
  labels:
    app: dockugen
    component: nginx
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: dockugen
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dockugen-ingress
  namespace: dockugen
  labels:
    app: dockugen
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - dockugen.yourdomain.com
    secretName: dockugen-tls
  rules:
  - host: dockugen.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dockugen-nginx-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: dockugen-service
            port:
              number: 3000
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: dockugen-service
            port:
              number: 8080
